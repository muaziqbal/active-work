#!/bin/bash
set -e

# Environment defaults
export DISABLE_SSL=${DISABLE_SSL:-true}

cd /app

# Cleanup any leftover pid file
if [ -f /app/tmp/pids/server.pid ]; then
  rm /app/tmp/pids/server.pid
fi

if [ -z "${SECRET_KEY_BASE}" ]; then
  echo 'WARNING: Please set SECRET_KEY_BASE to a random string, using "change me!" for this run.'
  export SECRET_KEY_BASE='change me!'
fi

# The database may need to start up for a bit first
if [ -n "${INTENTIONALLY_SLEEP}" ]; then
  echo "Intentionally sleeping ${INTENTIONALLY_SLEEP}"
  sleep ${INTENTIONALLY_SLEEP}
fi
if [ -n "${DATABASE_INITIAL_CONNECT_MAX_RETRIES}" ]; then
  max=${DATABASE_INITIAL_CONNECT_MAX_RETRIES}
  count=0
  while ! rake database_test:ping > /dev/null 2>&1 && [[ $count -le $max ]] ; do
    count=$[$count+1]
    echo "Retry $count of $max attempting to connect to $DATABASE_HOST. Sleeping ${DATABASE_INITIAL_CONNECT_SLEEP:-5}"
    sleep ${DATABASE_INITIAL_CONNECT_SLEEP:-5}
  done
fi

# We may need to try and create a database
if [ "${CREATE_DATABASE}" ]; then
  bundle exec rake db:create
fi

# Assuming we have a created database, run the migrations and seed it idempotently.
if [ -z "${DO_NOT_MIGRATE}" ]; then
 bundle exec rake db:migrate
fi

if [ -z "${DO_NOT_SEED}" ]; then
  bundle exec rake db:seed
fi

# Start ActiveWorkflow

# When SINGLE_DYNO=1 run all the processes in the same container. This should
# only be used for testing/demonstration purposes. SINGLE_DYNO mode was
# added specifically to support running ActiveWorkflow on Heroku free plan.
# Please use multiple container configuration in production.

if [ "${SINGLE_DYNO}" -eq "1" ]; then
  # Simple "homegrown" process management with somewhat graceful shutdown.
  (until bundle exec puma; do sleep 1; done) &
  web_id=$!
  (until bundle exec rails runner bin/scheduler.rb; do sleep 1; done) &
  (until bundle exec script/delayed_job -n 2 run; do sleep 1; done) &
  wait $web_id
else
  # Web only
  exec bundle exec puma
fi
